@model Contracts.Requests.HomePageRequests.GetHomePageResponse
@{
    ViewData["Title"] = "Home Page";
}

<div class="main-wrapper pt-80">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 order-2 order-lg-1">
                <aside class="widget-area">
                    <!-- widget single item start -->
                    <div class="card card-profile widget-item p-0">
                        <div class="profile-banner">
                            <figure class="profile-banner-small">
                                <a href="profile">
                                    <img src=@Model.HomeProfileResponseItem.BackgroundPhoto alt="">
                                </a>
                                <a href="profile" class="profile-thumb-2">
                                    <img src=@Model.HomeProfileResponseItem.UserPhoto alt="">
                                </a>
                            </figure>
                            <div class="profile-desc text-center">
                                <h6 class="author"><a href="profile">@Model.HomeProfileResponseItem.Username</a></h6>
                                <p>@Model.HomeProfileResponseItem.Description</p>
                            </div>
                        </div>
                    </div>
                </aside>
            </div>

            <div class="col-lg-6 order-1 order-lg-2">
                <!-- share box start -->
                <div class="card card-small">
                    <div class="share-box-inner">
                        <!-- profile picture end -->
                        <div class="profile-thumb">
                            <a href="profile">
                                <figure class="profile-thumb-middle">
                                    <img src=@Model.HomeProfileResponseItem.UserPhoto alt="profile picture">
                                </figure>
                            </a>
                        </div>
                        <!-- profile picture end -->

                        <!-- share content box start -->
                        <div class="share-content-box w-100">
                            <form class="share-text-box">
                                <textarea name="share" class="share-text-field" aria-disabled="true" placeholder="Say Something" data-toggle="modal" data-target="#textbox" id="email"></textarea>
                                <button class="btn-share" type="submit">share</button>
                            </form>
                        </div>
                        <!-- share content box end -->

                        <!-- Modal start -->
                        <div class="modal fade" id="textbox" aria-labelledby="textbox">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Share Your Mood</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <form asp-controller="Home" asp-action="CreatePost" method="post" enctype="multipart/form-data">
                                        <div class="modal-body custom-scroll">
                                            <textarea name="content" class="share-field-big custom-scroll" placeholder="Say Something"></textarea>

                                            <div class="upload-photo-box mt-3">
                                                <label for="photo-upload" class="custom-upload-btn">
                                                    📷 Загрузить фото
                                                </label>
                                                <input type="file" name="file" id="photo-upload" accept="image/*" style="display: none;" />
                                                <span id="file-name-display" style="margin-left: 10px; font-style: italic;"></span>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="post-share-btn" data-dismiss="modal">cancel</button>
                                            <button type="submit" class="post-share-btn">post</button>
                                        </div>
                                    </form>
                                    </div>
                                </div>
                        </div>
                        <!-- Modal end -->
                    </div>
                </div>
                <!-- share box end -->
                @{
                    foreach (var post in @Model.Posts)
                    {
                         <!-- post status start -->
                <div class="card">
                    <!-- post title start -->
                    <div class="post-title d-flex align-items-center">
                        <!-- profile picture end -->
                        <div class="profile-thumb">
                            <a href="#">
                                <figure class="profile-thumb-middle">
                                    <img src=@post.UserPhoto alt="profile picture">
                                </figure>
                            </a>
                        </div>
                        <!-- profile picture end -->

                        <div class="posted-author">
                            <h6 class="author"><a href="profile/@post.UserId">@post.UserName</a></h6>
                            <span class="post-time">@post.Time</span>
                        </div>
                        
                    </div>
                    <!-- post title start -->
                    <div class="post-content">
                        <p class="post-desc">
                            @post.Content
                        </p>
                        @{
                            if (post.Photo != null)
                            {
                                <div class="post-thumb-gallery">
                                    <figure class="post-thumb img-popup">
                                        <a href=@post.Photo>
                                            <img src=@post.Photo alt="post image">
                                        </a>
                                    </figure>
                                </div>
                            }
                        }
                        <div class="post-meta">
                            <button class="post-meta-like @(post.IsLiked ? "active" : "")" onclick="handleLike('@post.Id', this)">
                                <i class="bi bi-heart-beat"></i>
                                @if (post.IsLiked)
                                {
                                    <span> You and @post.Likes people like this</span>
                                }
                                else
                                {
                                    <span> @post.Likes people like this</span>
                                }
                                <strong>@post.Likes</strong>
                            </button>
                            <ul class="comment-share-meta">
                                <li>
                                    <button class="post-comment" onclick="showComments('@post.Id')">
                                        <i class="bi bi-chat-bubble"></i>
                                        <span>@post.CommentsCount</span>
                                    </button>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- post status end -->
                    }
                }
            </div>

            <!-- Comments Modal -->
            <div class="modal fade" id="commentsModal" tabindex="-1" role="dialog" aria-labelledby="commentsModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="commentsModalLabel">Comments</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="commentsList" class="comments-list">
                                <!-- Comments will be loaded here -->
                            </div>
                            <div class="comment-form">
                                <textarea id="commentContent" placeholder="Write a comment..."></textarea>
                                <button onclick="submitComment()">Post Comment</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 order-3">
                <aside class="widget-area">
                    <!-- widget single item start -->
                    <div class="card widget-item">
                        <h4 class="widget-title">Advertizement</h4>
                        <div class="widget-body">
                            <div class="add-thumb">
                                @* <a href="#"> *@
                                @*     <div class="game-frame hidden-xs"> *@
                                @* *@
                                @*         <!-- Игровой iframe --> *@
                                @*         <div id="desktop_game_container" class="desktop_game hidden-xs"> *@
                                @*             <iframe id="op4u_game" *@
                                @*                     onload="gameLoaded()" *@
                                @*                     src="https://demogamesfree.pragmaticplay.net/gs2c/openGame.do?lang=en&amp;cur=EUR&amp;gameSymbol=vs20doghouse" *@
                                @*                     width="100%" height="100%" title=""></iframe> *@
                                @*         </div> *@
                                @* *@
                                @*     </div> *@
                                @*      *@
                                @*     <!-- Bootstrap CSS --> *@
                                @*     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"> *@
                                @* *@
                                @*     <!-- rateYo! CSS --> *@
                                @*     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.3.2/jquery.rateyo.min.css"> *@
                                @* *@
                                @*     <!-- jQuery --> *@
                                @*     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
                                @* *@
                                @*     <!-- rateYo! JS --> *@
                                @*     <script src="https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.3.2/jquery.rateyo.min.js"></script> *@
                                @* </a> *@
                            </div>
                        </div>
                    </div>
                    <!-- widget single item end -->

                    <!-- widget single item start -->
                    <div class="card widget-item">
                        <h4 class="widget-title">Friends Zone</h4>
                        <div class="widget-body">
                            <ul class="like-page-list-wrapper">
                                @{
                                    foreach (var friend in @Model.FriendsList)
                                    {
                                        <li class="unorder-list">
                                            <!-- profile picture end -->
                                            <div class="profile-thumb">
                                                <a href="profile/@friend.Id">
                                                    <figure class="profile-thumb-small">
                                                        <img src=@friend.ImageUrl alt="profile picture">
                                                    </figure>
                                                </a>
                                            </div>
                                            <!-- profile picture end -->

                                            <div class="unorder-list-info">
                                                <h3 class="list-title"><a href="#">@friend.FirstName @friend.LastName</a></h3>
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                    <!-- widget single item end -->
                </aside>
            </div>
        </div>
    </div>
</div>

<!-- Scroll to top start -->
<div class="scroll-top not-visible">
    <i class="bi bi-finger-index"></i>
</div>
<!-- Scroll to Top End -->

@section Scripts {
    <script>
        let currentPostId = null;

        // Добавляем стили для модального окна комментариев
        const style = document.createElement('style');
        style.textContent = `
            .comment-form {
                margin-top: 20px;
            }
            .comment-form textarea {
                width: 100%;
                min-height: 80px;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                margin-bottom: 10px;
                resize: vertical;
            }
            .comment-form button {
                background-color: #dc4734;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                cursor: pointer;
                font-weight: 500;
            }
            .comment-form button:hover {
                background-color: #c13e2d;
            }
            .comments-list {
                max-height: 400px;
                overflow-y: auto;
            }
            .comment-item {
                padding: 10px;
                border-bottom: 1px solid #eee;
            }
            .comment-item:last-child {
                border-bottom: none;
            }
            .comment-item img {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                margin-right: 10px;
            }
            .comment-item .user-name {
                font-weight: 600;
                margin-bottom: 4px;
            }
            .comment-item .comment-content {
                color: #333;
            }
        `;
        document.head.appendChild(style);

        async function handleLike(postId, button) {
            try {
                const response = await fetch('/like', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ postId: postId })
                });

                if (response.ok) {
                    const span = button.querySelector('span');
                    const strong = button.querySelector('strong');
                    const currentLikes = parseInt(strong.textContent);
                    
                    if (button.classList.contains('active')) {
                        // Unlike
                        button.classList.remove('active');
                        strong.textContent = currentLikes - 1;
                        span.textContent = ` ${currentLikes - 1} people like this`;
                    } else {
                        // Like
                        button.classList.add('active');
                        strong.textContent = currentLikes + 1;
                        span.textContent = `You and ${currentLikes + 1} people like this`;
                    }
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function showComments(postId) {
            currentPostId = postId;
            
            try {
                const response = await fetch(`/comments/${postId}`);
                if (response.ok) {
                    const data = await response.json();
                    const commentsList = document.getElementById('commentsList');
                    commentsList.innerHTML = '';
                    
                    data.comments.forEach(comment => {
                        const commentHtml = `
                            <div class="comment-item">
                                <div class="d-flex">
                                    <img src="${comment.userPhoto}" alt="user photo">
                                    <div>
                                        <div class="user-name">${comment.userName}</div>
                                        <div class="comment-content">${comment.content}</div>
                                    </div>
                                </div>
                            </div>
                        `;
                        commentsList.innerHTML += commentHtml;
                    });
                    
                    $('#commentsModal').modal('show');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function submitComment() {
            if (!currentPostId) return;
            
            const content = document.getElementById('commentContent').value;
            if (!content.trim()) return;

            try {
                const response = await fetch('/comment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        postId: currentPostId,
                        content: content
                    })
                });

                if (response.ok) {
                    // Очищаем поле ввода
                    document.getElementById('commentContent').value = '';
                    
                    // Обновляем счетчик комментариев
                    const commentButton = document.querySelector(`button[onclick="showComments('${currentPostId}')"] span`);
                    const currentCount = parseInt(commentButton.textContent);
                    commentButton.textContent = currentCount + 1;
                    
                    // Перезагружаем комментарии
                    await showComments(currentPostId);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    </script>
}